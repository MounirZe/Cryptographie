#include <iostream>
#include "GInt.h"
#include <string.h>

#define _CRTDBG_MAP_ALLOC
#include <stdlib.h>
#include <crtdbg.h>



int main(){

   /*
   Parametres trop long à tester (clé 2048 bits)
   
   GInt p("100429277079682670881231456335542582268311388500602401495135579907687301127115309212140552315851877203399188182511734023458022924250899255185916771249632093537424575096216771186496329734481433842318771580143559936625132273888817727062130379097337743227697405276519457071635495445626504595890808037369435981453");
    GInt q("131530908968775763262944937587225829639574740117347914572674946540871602094471692321920660726383327978677930707554116288788093304425983830903493352300887862807709846324385675069250352103487772000158041421634072589417921450901911023804049683999614201424785380023528929402855497982953981868636663700004622919251");
 
	GInt n;


    n = p.Multiplication(q);
    GInt e("65537");
    GInt d( "13209554101367699609688894884466524437558669734342595913482291717662965777095018751547454929768189995186300256217607306651346180110174913865332768843192887527300572372775692245617031252707130563157696650825462313435601750265581233876253632862289558803041272038586095207682765233618748357680112840094743971369573081638459571862138517470930923965252030416976137423674368898710478253493027359425367715305343723901753616417606936831058456314189399600028864444231120827623593974686995589496482963180638419818738402910741031451291357520493743033926924262178148271057176171278371749870840006469539283170262385397666529732452");

    GInt ninvN("19572855741400445288020360414881723864906615725020286037698905836522641144593423160414172298018551504371207393250816665174647730798550422265426750958923743166272824356595374344923423387593069074416903748627613478285019234634003883478974166194764784946825530953767786085828262865223135442133549141017165850944212508819328165050438481577870718117646640460485834250199012013182030543709603367148226106658914778752781357103105441182963652288850481312612031298837106372824576069883760914286827894591163329168560801516621089756734733995409626953196284072734857435506046167548484285041503422049819238125528482971111371628537");

    GInt Gamma("1044388881413152506691752710716624382579964249047383780384233483283953907971557456848826811934997558340890106714439262837987573438185793607263236087851365277945956976543709998340361590134383718314428070011855946226376318839397712745672334684344586617496807908705803704071284048740118609114467977783598029006686938976881787785946905630190260940599579453432823469303026696443059025015972399867714215541693835559885291486318237914434496734087811872639496475100189041349008417061675093668333850551032972088269550769983616369411933015213796825837188091833656751221318492846368125550225998300412344784862595674492194617023806505913245610825731835380087608622102834270197698202313169017678006675195485079921636419370285375124784014907159135459982790513399611551794271106831134090584272884279791554849782954323534517065223269061394905987693002122963395687782878948440616007412945674919823050571642377154816321380631045902916136926708342856440730447899971901781465763473223850267253059899795996090799469201774624817718449867455659250178329070473119433165550807568221846571746373296884912819520317457002440926616910874148385078411929804522981857338977648103126085903001302413467189726673216491511131602920781738033436090243804708340403154190336");
	
	*/


	GInt p("3726287311");
	GInt q("2495927741");
	GInt n;
	n = p.Multiplication(q);
	GInt e("65537");
	GInt d("283967656016329673");
	GInt ninvN("72284236694626664700466080046039881893");
	GInt Gamma("2232182266230406407");
    GInt Message("500");//Message clair

	GInt Un("1");

    GInt Mc;//Message chiffré
    GInt M;//Message dechiffré


    Mc = GInt::ExponentiationMod(Message, e, n, ninvN, Gamma);//Message^e mod n  Resultat verifié avec wolframalpha
	M = GInt::ExponentiationMod(Mc, d, n, ninvN, Gamma);//Mc^d mod n  Resultat non cohérent
	


	for (int i = 0; i < M.gettaille(); i++) {
		std::cout << M.getp_int()[i] << std::endl; //Affichage de M en base 2^32
	}



     return 0;
}

